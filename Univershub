local base64_chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

-- Base64 decoding function
local function decodeBase64(data)
    data = data:gsub('[^' .. base64_chars .. '=]', '') -- Remove non-base64 characters
    return (data:gsub('.', function(x)
        if x == '=' then return '' end
        local r, f = '', (base64_chars:find(x) - 1)
        for i = 6, 1, -1 do
            r = r .. (f % 2^i - f % 2^(i-1) > 0 and '1' or '0')
        end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if #x ~= 8 then return '' end
        local c = 0
        for i = 1, 8 do
            c = c + (x:sub(i, i) == '1' and 2^(8-i) or 0)
        end
        return string.char(c)
    end))
end

-- Decode game script URL (simplified)
local function decodeGameScript(encodedScript)
    return game:GetService("HttpService"):JSONDecode(decodeBase64(encodedScript))
end

-- Game scripts based on PlaceId (example)
local gameScripts = {
    [100902716985467] = decodeGameScript('OEyqulDdwTOQFdGHtqpqIHPzhbiYOUYLxFYTvKhmgAvDHJxJYSoonEpQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLw==')
}

-- Get the script URL based on game ID
local gameId = game.PlaceId
local scriptURL = gameScripts[gameId]

-- Load the script (if URL exists)
if scriptURL then
    local success, errorMsg = pcall(function()
        loadstring(game:HttpGet(scriptURL))()
    end)
    if not success then
        warn("Error loading script: " .. errorMsg)
    end
else
    warn("No script found for game ID " .. gameId)
end
